{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","monster","name","email","id","react_default","a","createElement","className","key","alt","concat","src","CardList","monsters","map","card_component","SearchBox","placeholder","onChangeHandler","type","onChange","App","_useState","useState","_useState2","Object","slicedToArray","searchField","setSearchField","_useState3","_useState4","setMonsters","_useState5","_useState6","filteredMonsters","setFilteredMonsters","useEffect","fetch","then","response","json","users","newFilteredMosters","filter","toLocaleLowerCase","includes","search_box_component","event","searchFieldString","target","value","card_list_component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"4RAceA,SAXF,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACJC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,IAAKL,GACrCC,EAAAC,EAAAC,cAAA,OAAKG,IAAG,WAAAC,OAAaT,GAAQU,IAAG,wBAAAD,OAA0BP,EAA1B,4BAChCC,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCMGU,SAXE,SAAAb,GAAA,IAAEc,EAAFd,EAAEc,SAAF,OACbT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEPM,EAASC,IAAI,SAAAd,GACT,OACII,EAAAC,EAAAC,cAACS,EAAD,CAAMf,QAASA,SCGpBgB,SATG,SAAAjB,GAAA,IAAEQ,EAAFR,EAAEQ,UAAWU,EAAblB,EAAakB,YAAaC,EAA1BnB,EAA0BmB,gBAA1B,OACdd,EAAAC,EAAAC,cAAA,SACIC,UAAS,cAAAG,OAAgBH,GACzBY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BHG,SAhCH,WAAM,IAAAC,EACsBC,mBAAS,IAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACII,EADJJ,EAAA,GAAAK,EAEgBN,mBAAS,IAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEThB,EAFSiB,EAAA,GAECC,EAFDD,EAAA,GAAAE,EAGgCT,mBAASV,GAHzCoB,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTE,EAHSD,EAAA,GAGSE,EAHTF,EAAA,GAKhBG,oBAAU,WACRC,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIV,EAAYU,MAC5B,IAEHL,oBAAU,WACR,IAAMM,EAAqB7B,EAAS8B,OAAO,SAAC3C,GAC1C,OAAOA,EAAQC,KAAK2C,oBAAoBC,SAASlB,KAEnDQ,EAAoBO,IACnB,CAAC7B,EAAUc,IAOd,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,oBACAH,EAAAC,EAAAC,cAACwC,EAAD,CAAWvC,UAAU,aAAaW,gBARf,SAAC6B,GACtB,IAAMC,EAAoBD,EAAME,OAAOC,MAAMN,oBAC7ChB,EAAeoB,IAMsD/B,YAAY,oBAC/Eb,EAAAC,EAAAC,cAAC6C,EAAD,CAAUtC,SAAUqB,OCtBXkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAAvC,GAAiD,IAA9C2D,EAA8C3D,EAA9C2D,OAAQC,EAAsC5D,EAAtC4D,OAAQC,EAA8B7D,EAA9B6D,OAAQC,EAAsB9D,EAAtB8D,OAAQC,EAAc/D,EAAd+D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/D,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,WAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,QAOJjB","file":"static/js/main.06cde5c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nconst Card = ({monster}) => {\r\n    const {name, email, id} = monster;\r\n    return (\r\n        <div className=\"card-container\" key={id}>\r\n        <img alt={`monster ${name}`} src={`https://robohash.org/${id}?set=set2&size=180x180`}/>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = ({monsters}) => (\r\n    <div className=\"card-list\">\r\n        {\r\n            monsters.map(monster => {\r\n                return (\r\n                    <Card monster={monster}/>\r\n            );})\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({className, placeholder, onChangeHandler}) => (\r\n    <input \r\n        className={`search-box ${className}`}\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={onChangeHandler}\r\n    />\r\n);\r\n\r\nexport default SearchBox;","import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport CardList from './Components/card-list/card-list.component';\nimport SearchBox from './Components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n  const [searchField, setSearchField] = useState('');  //[value, set value]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setMonsters(users));\n  }, []);\n\n  useEffect(() => {\n    const newFilteredMosters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilteredMonsters(newFilteredMosters);\n  }, [monsters, searchField])\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox className='search-box' onChangeHandler={onSearchChange} placeholder='Search Monsters'/>\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}